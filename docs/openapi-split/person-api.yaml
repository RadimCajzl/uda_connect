openapi: 3.0.2
info:
  title: FastAPI
  version: 0.1.0
paths:
  /persons:
    servers:
     - url: http://localhost:30002/
    get:
      summary: Get All People
      operationId: get_all_people_persons_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All People Persons Get
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      summary: Create Person
      operationId: create_person_persons_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /persons/{person_id}:
    servers:
     - url: http://localhost:30002/
    get:
      summary: Get One Person
      operationId: get_one_person_persons__person_id__get
      parameters:
        - required: true
          schema:
            title: Person Id
            type: integer
          name: person_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Person:
      title: Person
      required:
        - id
        - first_name
        - last_name
        - company_name
      type: object
      properties:
        id:
          title: Id
          type: integer
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        company_name:
          title: Company Name
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
