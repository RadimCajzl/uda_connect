kind: PersistentVolume
apiVersion: v1
metadata:
  name: kafka-volume
  labels:
    type: local
    app: kafka
spec:
  storageClassName: manual
  capacity:
    storage: 256Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kafka-pv-claim
  labels:
    app: kafka
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  type: NodePort
  selector:
    app: kafka
  ports:
   - name: "internal"
     port: 9092
     targetPort: 9092
   - name: "external"
     port: 9094
     targetPort: 9094
     nodePort: 30020
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:3.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9092
            - containerPort: 9094
          # For PoC, kafka is deployed without any authentication.
          # TODO: for production, please add auth mechanism native
          # to target environment/apps.
          volumeMounts:
            - mountPath: /data/db
              name: kafka-data
          env:
          - name: CONNECTION_TRACKER_HOST
            value: "connection-tracker"
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT"
          - name: KAFKA_CFG_LISTENERS
            value: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
          - name: KAFKA_CFG_ADVERTISED_LISTENERS
            value: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:30020"
          - name: BITNAMI_DEBUG
            value: "yes"

      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pv-claim
